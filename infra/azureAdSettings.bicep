@minLength(1)
@description('The name of the Key Vault that will store AAD secrets for the web app')
param keyVaultName string

@minLength(1)
@description('The name of the Azure App Configuration Service that will store AAD secrets for the web app')
param appConfigurationServiceName string

@description('A scope used by the front-end public web app to get authorized access to the public web api. Looks similar to api://33333333-bbbb-4444-cccc-555555555555/relecloud.api')
param azureAdApiScopeFrontEnd string

@description('A unique identifier of the API web app')
param azureAdClientIdForBackEnd string

@description('A unique identifier of the front-end web app')
param azureAdClientIdForFrontEnd string

@secure()
@description('A secret generated by Azure AD so that the web app can establish trust with Azure AD')
param azureAdClientSecretForFrontEnd string

@description('A unique identifier of the Azure AD tenant')
param azureAdTenantId string

// the semi-colon is not a valid character for a kv key name so we use alternate dotnet syntax of -- to specify this nested config setting
var clientSecretName = 'AzureAd--ClientSecret'

resource kv 'Microsoft.KeyVault/vaults@2021-11-01-preview' existing = {
  name: keyVaultName

  resource kvFrontEndAzureAdClientSecret 'secrets@2021-11-01-preview' = {
    name: clientSecretName
    properties: {
      value: azureAdClientSecretForFrontEnd
    }
  }
}

resource appConfigSvc 'Microsoft.AppConfiguration/configurationStores@2022-05-01' existing = {
  name: appConfigurationServiceName

  //begin front-end web app settings
  resource appConfigSvcFrontEndAzureAdApiScope 'keyValues@2022-05-01' = {
    name: 'App:RelecloudApi:AttendeeScope'
    properties: {
      value: azureAdApiScopeFrontEnd
    }
  }
  
  resource appConfigSvcAzureAdClientId  'keyValues@2022-05-01' = {
    name: 'AzureAd:ClientId'
    properties: {
      value: azureAdClientIdForFrontEnd
    }
  }
  
  resource appConfigSvcFrontEndAzureAdClientSecret 'keyValues@2022-05-01' = {
    name: 'AzureAd:ClientSecret'
    properties: {
      value: string({
        uri: '${kv.properties.vaultUri}secrets/${clientSecretName}'
      })
      contentType: 'application/vnd.microsoft.appconfig.keyvaultref+json;charset=utf-8'
    }
  }
  
  resource appConfigSvcAzureAdTenantId  'keyValues@2022-05-01' = {
    name: 'AzureAd:TenantId'
    properties: {
      value: azureAdTenantId
    }
  }

  //begin web API app settings
  
  resource appConfigSvcAzureAdClientIdForBackEnd  'keyValues@2022-05-01' = {
    name: 'Api:AzureAd:ClientId'
    properties: {
      value: azureAdClientIdForBackEnd
    }
  }
  
  resource appConfigSvcApiAzureAdTenantId  'keyValues@2022-05-01' = {
    name: 'Api:AzureAd:TenantId'
    properties: {
      value: azureAdTenantId
    }
  }
}
