@model Relecloud.Web.Models.Search.SearchResponse<Relecloud.Web.Models.Search.ConcertSearchResult>
@{
    ViewData["Title"] = "Search";
    int MaxPageSize = Relecloud.Web.Models.Search.SearchRequest.PageSize;
}

@if (Model?.Request is null)
{
    <div class="row">
        <div class="col-md-4">
            <h3>Search</h3>
            @if (string.IsNullOrEmpty(ViewBag.NoSearch))
            {
                <p>Search is unavailable right now. Please try again later.</p>
            }
            else
            {
                <p>@ViewBag.NoSearch</p>
            }
        </div>
    </div>
    return;
}

<div class="row">
    <div class="col-md-4">
        <h3>Search</h3>

        <h4>Sort</h4>
        <ul class="list-unstyled">
            <li>@Html.LinkForSortType(Model.Request, nameof(Concert.Price), false, "Price (Lowest First)")</li>
            <li>@Html.LinkForSortType(Model.Request, nameof(Concert.Price), true, "Price (Highest First)")</li>
            <li>@Html.LinkForSortType(Model.Request, nameof(Concert.StartTime), false, "Date (Earliest First)")</li>
            <li>@Html.LinkForSortType(Model.Request, nameof(Concert.StartTime), true, "Date (Latest First)")</li>
        </ul>

        @if (Model.Facets != null && Model.Facets.Any())
        {
            foreach (var facet in Model.Facets)
            {
                <h4>@facet.DisplayName</h4>
                <ul class="list-unstyled">
                    @foreach (var facetValue in facet.Values)
                    {
                        <li>@Html.LinkForSearchFacet(Model.Request, facet, facetValue)</li>
                    }
                </ul>
            }
        }
    </div>
    <div class="col-md-8">
        <h3>
            Results
            @if (!string.IsNullOrWhiteSpace(Model.Request.Query))
            {
                <span>for &quot;@Model.Request.Query&quot;</span>
            }
        </h3>
        @if (!Model.Results.Any())
        {
            <div class="alert alert-warning">Your query didn't return any results.</div>
        }
        else
        {
            <div>
                @if (Model.TotalCount == 1)
                {
                    <span>Found 1 result</span>
                }
                else
                {
                    <span>Found @Model.TotalCount results</span>   
                }
            </div>
            <div class="list-group">
                @foreach (var concert in Model.Results)
                {
                    <div class="list-group-item">
                        <h3 class="list-group-item-heading">
                            <a asp-controller="Concert" asp-action="Details" asp-route-id="@concert.Id">@concert.Artist &mdash; @concert.Title</a>
                            <span class="badge bg-info">@concert.Price.ToString("c")</span>
                        </h3>
                        <div class="text-muted"><span class="badge bg-secondary">@concert.Genre</span>  @concert.StartTime.UtcDateTime.ToString() &raquo; @concert.Location</div>
                        @if (concert.HitHighlights != null && concert.HitHighlights.Any())
                        {
                            <div class="alert alert-info offset-top-md">
                                @foreach (var hitHighlight in concert.HitHighlights)
                                {
                                    <div class="highlight">@Html.Raw(hitHighlight)</div>
                                }
                            </div>
                        }
                    </div>
                }
            </div>
            <div>
                @if (Model.TotalCount > MaxPageSize)
                {
                    //this search result has pages
                    for (int i=4; i > 0; i--)
                    {
                        if (Model.Request.CurrentPage - i >= 0)
                        {
                            <span class="mr-3">
                                @Html.LinkForPage(Model.Request, Model.Request.CurrentPage - i)
                            </span>   
                        }
                    }
                    <span class="mr-3">@(Model.Request.CurrentPage+1)</span>
                    for (int i=1; i<5 && i+Model.Request.CurrentPage < Model.TotalCount/MaxPageSize + 1; i++)
                    {
                        <span class="mr-3">
                            @Html.LinkForPage(Model.Request, Model.Request.CurrentPage + i)
                        </span>
                    }
                }
            </div>
        }
    </div>
</div>